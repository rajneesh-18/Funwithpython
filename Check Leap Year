from dataclasses import dataclass
from typing import List

@dataclass
class Year:
    value: int

    def is_leap_year(self) -> bool:
        """
        Determine if the year is a leap year.
        Leap year rules:
        - Divisible by 4, but not by 100, unless divisible by 400.
        """
        return (self.value % 4 == 0 and self.value % 100 != 0) or (self.value % 400 == 0)


def check_years(years: List[int]) -> List[str]:
    """
    Accepts a list of years and returns leap year results.
    Useful for both CLI and unit testing.
    """
    results = []
    for y in years:
        year_obj = Year(y)
        if year_obj.is_leap_year():
            results.append(f"✅ {y} is a leap year.")
        else:
            results.append(f"❌ {y} is not a leap year.")
    return results


def get_year_input() -> List[int]:
    """Get validated list of years from user input."""
    while True:
        try:
            raw_input = input("Enter year(s), separated by commas: ")
            years = [int(y.strip()) for y in raw_input.split(",") if y.strip()]
            if any(y <= 0 for y in years):
                raise ValueError
            return years
        except ValueError:
            print("Invalid input. Please enter positive integer(s). Example: 2020, 2024, 2100")


def main():
    print("🌍 Welcome to the Leap Year Checker!")
    years = get_year_input()

    results = check_years(years)
    print("\nResults:")
    for r in results:
        print(r)

    print("\n✨ Thanks for using Leap Year Checker! ✨")


if __name__ == "__main__":
    main()
