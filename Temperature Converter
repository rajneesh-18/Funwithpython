from dataclasses import dataclass
from enum import Enum, auto

# Enum for conversion types
class ConversionType(Enum):
    F_TO_C = auto()
    C_TO_F = auto()
    EXIT = auto()

@dataclass
class Temperature:
    value: float
    conversion: ConversionType

    def convert(self) -> float:
        """Perform temperature conversion based on the selected type."""
        if self.conversion == ConversionType.F_TO_C:
            return (self.value - 32) * 5 / 9
        elif self.conversion == ConversionType.C_TO_F:
            return (self.value * 9 / 5) + 32
        else:
            raise ValueError("Invalid conversion type.")

def get_user_input() -> Temperature:
    """Get validated user input for temperature conversion."""
    while True:
        print("\nTemperature Converter:")
        print("1. Fahrenheit to Celsius")
        print("2. Celsius to Fahrenheit")
        print("3. Exit")
        choice = input("Select an option (1-3): ").strip()

        conversion_map = {
            '1': ConversionType.F_TO_C,
            '2': ConversionType.C_TO_F,
            '3': ConversionType.EXIT
        }

        if choice in conversion_map:
            if conversion_map[choice] == ConversionType.EXIT:
                return Temperature(0, ConversionType.EXIT)
            try:
                temp_value = float(input("Enter the temperature: "))
                return Temperature(temp_value, conversion_map[choice])
            except ValueError:
                print("Invalid input. Please enter a numeric value.")
        else:
            print("Invalid selection. Please choose 1, 2, or 3.")

def main():
    print("Welcome to the Advanced Temperature Converter!")

    while True:
        temp = get_user_input()
        if temp.conversion == ConversionType.EXIT:
            print("Thank you for using the converter. Goodbye!")
            break

        converted = temp.convert()
        if temp.conversion == ConversionType.F_TO_C:
            print(f"{temp.value:.2f}째F is equal to {converted:.2f}째C")
        else:
            print(f"{temp.value:.2f}째C is equal to {converted:.2f}째F")

        print("I hope this helps you!")
        print("Thanks for visiting here.\n")

if __name__ == "__main__":
    main()
