import random
from dataclasses import dataclass
from enum import Enum
import time

# Enum for possible choices
class Choice(Enum):
    ROCK = "rock"
    PAPER = "paper"
    SCISSORS = "scissors"

# Enum for game result
class Result(Enum):
    WIN = "🎉 You win!"
    LOSE = "😢 You lose!"
    DRAW = "🤝 It's a draw!"

@dataclass
class Game:
    user_choice: Choice
    computer_choice: Choice

    def find_winner(self) -> Result:
        """Determine the result of a single round."""
        if self.user_choice == self.computer_choice:
            return Result.DRAW
        elif (
            (self.user_choice == Choice.ROCK and self.computer_choice == Choice.SCISSORS) or
            (self.user_choice == Choice.PAPER and self.computer_choice == Choice.ROCK) or
            (self.user_choice == Choice.SCISSORS and self.computer_choice == Choice.PAPER)
        ):
            return Result.WIN
        else:
            return Result.LOSE

def get_user_choice() -> Choice:
    """Get validated user choice."""
    while True:
        user_input = input("👉 Enter your option (rock, paper, or scissors): ").strip().lower()
        try:
            return Choice(user_input)
        except ValueError:
            print("❌ Invalid choice. Please pick between rock, paper, or scissors.")

def choose_mode() -> int:
    """Let the user choose the game mode."""
    print("\nSelect game mode:")
    print("1️⃣  Normal (1 Round)")
    print("2️⃣  Best of 3")
    print("3️⃣  Best of 5")

    while True:
        choice = input("Choose a mode (1-3): ").strip()
        if choice == "1":
            return 1
        elif choice == "2":
            return 3
        elif choice == "3":
            return 5
        else:
            print("❌ Invalid option. Try again.")

def play_round() -> Result:
    """Play a single round."""
    user_choice = get_user_choice()
    computer_choice = random.choice(list(Choice))
    print(f"💻 Computer chose: {computer_choice.value}")
    time.sleep(0.5)

    game = Game(user_choice, computer_choice)
    result = game.find_winner()
    print(f"➡️  {result.value}\n")
    return result

def play_game():
    """Play a full game with chosen mode."""
    rounds = choose_mode()
    user_score, computer_score = 0, 0

    print("\n🎮 Let's play Rock-Paper-Scissors!")
    print(f"📊 First to {rounds//2 + 1} wins.\n")

    for i in range(rounds):
        print(f"--- Round {i+1} ---")
        result = play_round()

        if result == Result.WIN:
            user_score += 1
        elif result == Result.LOSE:
            computer_score += 1

        print(f"🔹 Score: You {user_score} - {computer_score} Computer\n")

        # End early if someone has already won majority
        if user_score > rounds // 2 or computer_score > rounds // 2:
            break

    # Final result
    if user_score > computer_score:
        print("🏆 Congratulations, you won the match!")
    elif computer_score > user_score:
        print("💻 Computer wins the match. Better luck next time!")
    else:
        print("🤝 It's a tie overall!")

def main():
    """Main entry point with replay option."""
    while True:
        play_game()
        again = input("\nDo you want to play again? (y/n): ").strip().lower()
        if again != 'y':
            print("\n👋 Thanks for playing! Come back soon.")
            break

if __name__ == "__main__":
    main()
