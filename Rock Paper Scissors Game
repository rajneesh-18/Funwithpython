import random
from dataclasses import dataclass
from enum import Enum, auto

# Enum for possible choices
class Choice(Enum):
    ROCK = "rock"
    PAPER = "paper"
    SCISSORS = "scissors"

# Enum for game result
class Result(Enum):
    WIN = "🎉 Wow, You win!"
    LOSE = "😢 Oops, You lose. Try Again!!"
    DRAW = "🤝 Draw! Try Again for Win!"

@dataclass
class Game:
    user_choice: Choice
    computer_choice: Choice

    def find_winner(self) -> Result:
        """Determine the result of the game."""
        if self.user_choice == self.computer_choice:
            return Result.DRAW
        elif (
            (self.user_choice == Choice.ROCK and self.computer_choice == Choice.SCISSORS) or
            (self.user_choice == Choice.PAPER and self.computer_choice == Choice.ROCK) or
            (self.user_choice == Choice.SCISSORS and self.computer_choice == Choice.PAPER)
        ):
            return Result.WIN
        else:
            return Result.LOSE

def get_user_choice() -> Choice:
    """Get validated user choice."""
    while True:
        user_input = input("Enter your option (rock, paper, or scissors): ").strip().lower()
        try:
            return Choice(user_input)
        except ValueError:
            print("Invalid selection. Please select between rock, paper, or scissors.")

def main():
    print("🎮 Welcome to Rock-Paper-Scissors!")

    user_choice = get_user_choice()
    computer_choice = random.choice(list(Choice))
    print(f"💻 Computer selected: {computer_choice.value}")

    game = Game(user_choice, computer_choice)
    result = game.find_winner()
    print(result.value)

    print("\nThanks for playing! Try again to beat the computer!")

if __name__ == "__main__":
    main()
